/*
 *  Main tolglow css. Should continue to be organized towards putting all
 *  components in own files, this one strictly imports and main styling.
 *  Then move to SASS...
 */

@import './tolglow/cue-grid.css';

@import './tolglow/cue-var-control.css';

@import './tolglow/native-inputs.css';
@import './tolglow/mods.css';


.noselect { -webkit-touch-callout: none; /* iOS Safari */ -webkit-user-select: none; /* Safari */ -khtml-user-select: none; /* Konqueror HTML */ -moz-user-select: none; /* Firefox */ -ms-user-select: none; /* Internet Explorer/Edge */ user-select: none; /* Non-prefixed version, currently supported by Chrome and Opera */ }

::-webkit-scrollbar {
  /* all: initial; */
  /* all: unset; */
  /* prob time to give up on re-com it does far too much bs... */ /* because now im hiding even the default scrollbar... */
  width: 0px;
  height: 1px !important;
}
:root { /* Variables */
    --faint-border:     rgba(30, 30, 30, 0.5);
    --faint-bg:         rgba(30, 30, 30, 0.15);
    --nav-height:       25px;
    --danger:           #dc8075;
    --cue-cell-height:  45px;

    --message-error:    rgba(230, 64,  72,  0.5);
    --message-warning:  rgba(224, 143, 62,  0.5);
    --message-info:     rgba(189, 172, 188, 0.5);
}
body {
    /* transition: 0.3s; */
    background-color: #2a2829;
    color: #d5ccbf;
    line-height: 1.2;
    font-size: 13px;
    text-align: center;
    max-width: 100%; /* prevent "nothing's actually there but allow me to let you nudge sideways anyways"" */
    overflow-x: hidden;
    /* getting similar issue anyways on iphone (or, anything <400 (?)) where it's zooming out to fit overflow... */
}

pre {
    background-color: #2a2829;
    color: #d5ccbf;
    text-align: left;
    font-size: 11px;
}
div { /* dont understand how this has higher selectivity than direct style in div?? */
  /* color: #d5ccbf; */ /* only wanted it as fallback */
}

span::first-letter { font-size: 110%; }
span[data-descr] {
  position: relative;
  text-decoration: underline;
  color: #00F;
  cursor: help;
}
span[data-descr]:hover::after {
  content: attr(data-descr);
}

.naver {
  width: 100%;
  /* width: 90%; */
  height: var(--nav-height);
  flex: 0 0 auto;
  justify-content: space-between;
  font-size: 11px;
  position: fixed;
  background: rgb(50, 50, 50, 0.9);
  border: 1px solid var(--faint-border);
  z-index: 100;
}
.naver > a {
  padding: 0.4rem 0.5rem;
}
.naver > a:hover {
  filter: brightness(120%);
  background: rgb(100, 100, 120, 0.3);
}
.nav-bar-fill {
 height: var(--nav-height);
}


.CodeMirror {
  /* padding-bottom: 3px; /1* text cuts off in input otherwise... *1/ */
  border: 0.5px solid var(--faint-border);
}
.CodeMirror-lines {
  padding: 0px 0px; /* text cuts off in input otherwise... */
  margin: 0px 0px -4px 0px;
}

/* @import './tolglow/cue-grid.css'; */


.cue-list {
    margin: 10px 5px 10px 5px;
    /* padding: 4px 2px; */
    border: 2px solid #292929; /* border: 2px solid rgb(50, 50, 50, 0.7); */
    background: rgba(30, 30, 30, 0.5);
}
.cue-list-header > div {
  display: flex;
  padding: 0px 8px;
  margin: 2px 4px;
}
.cue-list-header > div > div {
  margin: 0px 5px;
}

.cue-list-header {
  display: flex;
  justify-content: space-between;
  align-items: center;

    padding: 2px 0px;
    margin-top: 3px;
    border: 1px solid #242424; /* border: 2px solid rgb(50, 50, 50, 0.7); */
    /* background: rgba(20, 20, 20, 0.5); */
    background: rgba(80, 80, 80, 0.4);
    opacity: 0.80;
}

.cue-list-top-bar {
  display: flex;
  align-items: center;
  align-content: center;
  justify-content: center;
}
.filters-saved {
  /* flex: 1 1 auto; */
  align-items: center;
}
.filter-saved {
  padding: 5px 9px;
  border-radius: 8px;
  margin: 4px 6px;
  display: inline-flex;
  /* flex: 1 1 auto; */
  background: rgb(10, 10, 10, 0.5);
  /* text-align: left; */
  align-self: center;
}
.filter-saved:hover {
  filter: brightness(115%);
  background: rgb(20, 20, 20, 0.6);
  transition: 0.1s;
  transform: scale(1.1);
}

.stop-btns {
  display: flex;
  align-items: center;
  filter: brightness(85%);
}

.effect-row {
    display: flex; /* test */
    justify-content: space-between;

    /* transition: 0.2s ease-out, background-color 1s ease-in-out; */
    box-shadow: inset 1px 1px rgb(55, 60, 60, .25);
    /* padding: 1px 2px; */
    /* margin: 1px 2px; */

    /* height transition test */
    overflow: hidden;
    transition: 0.2s ease-out, background-color 1s ease-in-out, max-height 0.3s cubic-bezier(0.9, 0, 0.9, 0);
    height: auto;
    max-height: 999px;
}
.effect-row-minimized {
  max-height: 50px; /* should set like one line font size or? */
  transition: 0.2s ease-out, background-color 1s ease-in-out, max-height 0.3s cubic-bezier(0, 0.9, 0, 0.9);
}
.effect-row-undocked {
  position: fixed;
  width: 100%;
  box-shadow: 2px -3px 7px 2px rgb(30, 30, 30, 0.20);
  /* position: sticky; */
  z-index: 100;
}
.effect-row:hover { /* doesnt appear to apply to bg-color transition time so */
    filter: brightness(120%); /* background-color: rgb(100, 100, 100, 0.5); */
}
.effect-row:hover :last-child {
  visibility: visible; /* show row buttons. matches a ton of other crap tho so should be more specific... */
  /* filter: brightness(150%); */
  /* other info: */
/* Note that, as data attributes are plain HTML attributes, you can even access them from CSS.
 * For example to show the parent data on the article you can use generated content in CSS with the attr() function: */
/*  article::before { content: attr(data-parent); } */
/*  You can also use the attribute selectors in CSS to change styles according to the data: */
/*  article[data-columns='3'] { width: 400px; } */
/*  article[data-columns='4'] { width: 600px; } */
}

.collapsable-section { /* height transition test */
    overflow: hidden;
    transition: max-height 0.4s cubic-bezier(0.9, 0, 0.9, 0); /* how add to transitions and not replace??? */
    height: auto;
    max-height: 999px;
}
.collapsable-section-collapsed {
  max-height: 50px; /* should set like one line font size or? */
  transition: max-height 0.4s cubic-bezier(0, 0.9, 0, 0.9);
}

.effect-row > div {
  display: flex;
  /* overflow: hidden; */
  border-right: 1px solid rgb(55, 60, 60, .55); /* dont double up border */
  border-bottom: 1px solid rgb(55, 60, 60, .55);
}

.effect-info {
  display: block !important; /* ensure line1 and line2 are separated */
  padding: 2px 5px;
    /* margin-top: 4px; */
  font-size: 12px;
  min-width: 15%; /* min and max have to be same or different ones wont line up. but maybe that's ok? */
  /* bc we have issue that usually staying not v wide and text wrapping is nice */
  /* but on phone it gets p fucked. media selectors etc i guess but yeah... */
  max-width: 15%;
}
.effect-info > div {
  flex: 1 1 auto;
  /* align-items: center; */ /* makes min button not stay in corner when text wraps. bad */
  margin: 3px 1px;
}
.effect-info-line1 > div {
  text-align: left;
}
.effect-info-name {
  /* margin-left: 5px; */
  margin-left: 0.3em;
}

.effect-info-line2 {
  /* text-align: left; */
}

.effect-row-buttons { /* ideally: wrap *if container multiline* else no
    /* display: flex; /1* test *1/ */
    /* flex-flow: column wrap; */
  /* flex: 0 0 auto; /1* dont expand *1/ */
  flex: 0 1.7 auto; /* dont expand, + test do make smaller */
  align-items: center;
  align-content: center;
  opacity: 0.75;
  padding: 0px 2px;
  /* max-width: 50px; */
  flex-flow: wrap;
}
.effect-row-button {
  transition: opacity 200ms;
  margin: 0px 2px;
  color: #dcb;
  font-size: 14px;
  box-shadow: 8px 6px 10px 5px rgb(50, 50, 30, 0.25);
}

.cue-var-controls {
  /* display: flex; */
  flex-flow: row wrap; /* shrinks otherwise */
  flex: 1 1 auto; /* ensures -main container with control actually expands */
  background: var(--faint-bg);
}
.cue-var-controls-mini-scroll {
  overflow-y: scroll;
  max-height: 4rem;
}

.cue-var-summary {
  display: flex;
  flex: 0 1 auto;
  /* justify-content: space-around; /1* XXX would need to revert flex-end in var-control somehow but this aint how *1/ */
}
.cue-var-summary > div {
  margin: 0px 5px;
}

.cue-var-control { /* IDEAS: smooth resizing/drag-n-drop reordering of controls, and auto-flow */
  display: flex;
  position: relative;
  flex-wrap: wrap; /* so summary can extend to other lines... */
  flex: 1 1 auto; /* uh why is this working now? prob bc hard-specifying width on "those" */
  min-width: 25%;
  /* width: 75%; /1* means a control of 25% width _before_ this control can fit, but if this is first on line this will expand further *1/ */
  /* width: 50%; /1* means a control of 25% width _before_ this control can fit, but if this is first on line this will expand further *1/ */
  /* max-width: 400px; */
  /* something like 73% suddenly this (if slider) will compact and a 25% from after comes in */
  /* meaning for some reason padding/borders are treated differently when before and when after, investigate why */
  /* very hacky and presumably flaky currently */
  /* min-width: 80%; /1* each control (or summary-line) on own line in flex container *1/ */
  /* max-width: 100%; /1* each control (or summary-line) on own line in flex container *1/ */
  justify-content: space-around; /* for summary (since all space auto filled when controls) */
  /* justify-content: flex-end; /1* works better than space-around if not filling entire space and text justified right? *1/ */
  align-items: center; /* vertical center */
  /* flex-flow: row wrap; *1/ /1* default */
  padding: 1px 2px;
  margin: 4px 5px;
  background: rgba(50, 50, 50, 0.15);
  text-align: right;
}

.cue-var-control-main {
  align-items: center;
  justify-content: center;
  justify-items: center;

  margin: 2px 6px;
  padding: 0px 1px;
  /* outline: 1px solid rgb(55, 60, 60, .45); */
  background: rgba(50, 50, 50, 0.10);
  box-shadow: 0px 0px 15px 12px rgb(30, 30, 30, 0.06);
}
.auto-expand {
  /* max-width: 80%; */
  /* width: 75%; */
  min-width: 75%; /* works better than equiv width for some reason (color picker doesnt overflow with this!?? why) */
  /* max-width: 375px; */ /* will have to cap width some way... */
  /* flex: 1 1 auto; /1* needed for most controls to auto expand. but fixed-width (xy, knob) mustnt ... *1/ */
}
.cue-var-control-main > div {
}
.cue-var-control-main > div:hover {
  filter: brightness(110%);
  /* flex: 1 1 auto !important; */ /* still needed? force child to expand */
}
.cue-var-field {
  flex: 1 1 auto; /* expand these to max-width for even cols */
  max-width: 25%; /* inc from 15 to avoid gap between text and control, but figure out a real solution instead! */
  /* or wait before had 15% name 70% control 15% val. then dropped val, put control at 75, so makes sense needs to be 25 to fill! */
  /* tho justify-content flex-end should also fix it ... */
}
.cue-var-control-name, .cue-var-control-value {
  z-index: 5;
  /* flex: 1 1 auto; /1* expand these to max-width for even cols *1/ */
  /* max-width: 15%; /1* leads to some double rows on xy vals hmm *1/ */
  /* display: flex; */

  /* margin: 4px 4px; */  /* just this tiny margin makes eg color wrap control to next line... gah so sensitive */
    /* margin-top: 0px; */
    /* padding-right: 0px; */
    /* outline: 1px solid rgb(20, 20, 20, 0.05); */
    /* background: rgba(150, 150, 150, 0.05); */
}

/* @import './tolglow/cue-var-control.css'; */

/* @import './tolglow/native-inputs.css'; */
/* @import './tolglow/mods.css'; */


.macro-btns {
  margin: 10px 10px;
  overflow: hidden;
  border: 1px solid var(--faint-border);
}

.nav-and-utils {
  display: flex;
  flex: 1 1 auto;
  justify-content: space-around;
  /* background-color: #222324; */
  background: linear-gradient(#212224, rgb(50, 50, 50, 0.4));
  flex-wrap: wrap;
}

.nav-btns {
  margin: 2px 2px;
  background-color: #282828;
  border: 1px solid rgba(100, 100, 100, 0.4);
  display: flex;
  flex-wrap: wrap;
  flex: 0 1 auto;
  max-width: 100px; /* for lack of better know-how */
  /* height: 50px; */
}

.nav-btn {
  min-width: 33%;
  flex: 0 1 auto;
  border: 1px solid rgba(100, 100, 100, 0.2);
  border-radius: 6px;
  font-size: 12px;
  opacity: 0.8;
}

.sync-sources {
 /* flex: 1 1 auto; */
 /* max-width: 250px; */
  margin: 2px 4px;
  text-align: left;
  font-size: 12px;
}

.row-button { /*cant reach these by css...*/
    transition: opacity 270ms;
    color: #dcb;
    font-size: 20px;
    box-shadow: 8px 6px 10px 5px rgb(50, 50, 30, 0.25);
}



#modal-container {
  top: 0px; left: 0px;
  position: fixed;
  width: 100%;
  height: 100%;
  z-index: 1000;
  display: flex;
  justify-content: center;
  align-content: center;
  align-items: center;
}

#modal {
  box-shadow: 2px 2px 7px 4px rgb(30, 30, 30, 0.35);
  background-color: #2a2829;

  opacity: 0; /* id prefer not actually rendering it unless needed tho... */
  pointer-events: none;
  transform: scale(1.5);
}
.modal-is-open#page {
  /* filter: blur(1px) grayscale(50%) brightness(40%); */
  filter: blur(1px) grayscale(50%); /* brightness acts a bit weird...doesnt cover everything? */
  transform: scale(0.99);
}
.modal-is-open#modal {
  transform: scale(1);
  opacity: 1;
  pointer-events: auto;
}
#page, #modal {
 transition: all 0.4s ease;
}

.log-container {
  background: #222;
  display: flex;
  /* align-items: center; */
  justify-content: left;
  justify-items: left;
}
.log {
  text-align: left;
  font-size: 0.8rem;
}
.log-inner {
 max-height: 20em;
 overflow-x: scroll;
 width: 100%;
 /* padding: 0.5em 0em; */
 transition: all 0.3s;
}
.log-message {
  white-space: nowrap;
  line-height: 1rem;
  /* border: 0.5px solid rgb(90, 90, 90, 0.5); */
  border: 0.5px solid rgb(0, 0, 0, 0.3);
  padding: 0em 0.5em;
  /* background: var(--log-message-bg); */
}
.log-message > td {
  padding: 0em 0.2em 0em 1.2em;
}
.message td {
  white-space: wrap;
}

.hud {
  position: fixed;
  z-index: 100;
  bottom: 1.5rem;
  right: 1.5rem;
  font-size: 1.6rem;
}
.hud-message {
  margin: 0.8rem;
  padding: 0.3rem 0.7rem;
  border: 1px solid rgb(150, 150, 150, 0.3);
  opacity: 0.8;
  /* position: relative; */
}

.message.error   { color: var(--message-error); }
.message.warning { color: var(--message-warning); }
/* .message.info    { color: var(--message-info); color: #222; } */

.hud-message.error   { background: #f55; }
.hud-message.warning { background: #fa5; }
.hud-message.info    { background: #dcd; color: #222; }

.hud-modal-main {
  padding: 0.5rem 2rem;
}
.hud-modal-main > * {
  padding: 0.5rem;
}


.zmdi {
  display: flex; /* some weird sizing behavior with default inline-block */
}
code {
    background: rgba(30, 30, 30, .3) !important;
    color: var(--info) !important;
    border: 0px; /* weird bug */
}
.map-pprint {
    background: rgba(30, 30, 30, .5) !important;
    color: #dcb !important;
    font-size: 10px;
    border: 1px solid #887;
}
.header-bar {
    background: rgba(0, 0, 0, .2) !important;
    text-align: left;
    border: 3px solid #222;
}

.progress-bar { color: #567; background-color: #222; }



.input-dark { /* Stuff for rc dropdown I think? fix and replace, obviously. */
    background: rgba(30, 30, 30, .65) !important;
    color: #dcb !important;
    opacity: 0.9;
    z-index: 5;
}
.chosen-container-single > div {
    background: rgba(30, 30, 30, .65);
    color: #dcb;
}
.chosen-container-single.chosen-single {
    background: rgba(30, 30, 30, .65);
    color: #dcb;
}
.chosen-container-multi.chosen-choices {
    background: rgba(30, 30, 30, .65);
    color: #dcb;
}
.chosen-container.chosen-drop {
    background: rgba(30, 30, 30, .65);
    color: #dcb;
}
.chosen-container-active {
    background: rgba(30, 30, 30, .65);
}
